<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script>
# 内容简介 #

* 算法分析基础.
* 递归算法
* 概率分析与随机化算法

## 算法分析基础 ##

为了精确衡量一段程序在计算设备中的运行性能，前人们发明了一种数学方法，即时间复杂度于空间复杂度。

通常，如果一段程序或者一个算法有被衡量的价值，她必须有循环元素。因为非循环的程序段或者算法的运行时间是完全可以预料的，通常我们称作"常量时间"。一旦有了循环元素，我们分析性能的时候就有了一个神秘的变量：n，也就是问题的规模，再通俗点说就是循环的次数。

例如，《算法导论》中第二章对插入排序的分析里，我们先粗略的得到了一个变量为n的函数，所以我们对算法的分析，从某种意义上来说是对这个函数 f(n) 的分析：即当n逐渐增大，f(n) 的增长趋势。

为了方便分析 f(n) 的增长趋势，先人们发明了几种基于 f(n) 的函数集合，也叫Asymptotic notation，即渐近表达式，常用的有三种：

段内插入LaTeX代码是这样的：$\exp(-\frac{x^2}{2})$，试试看看吧

<pre>
\(E=mc^2\)，$$x_{1,2} = \frac{-b \pm \sqrt{b^2-4ac}}{2b}.$$
</pre>

<img src="http://latex.codecogs.com/svg.latex?1+sin(x)" border="0"/>